wb = xlsx_package.workbook

# Define styles
header_style = wb.styles.add_style(
  b: true, 
  alignment: { horizontal: :center, vertical: :center },
  bg_color: 'D3D3D3' # Light Gray background
)

# Preload Doctorlist and Denialcodelist records to avoid N+1 queries
doctorlist_mapping = Doctorlist.where(activity_clinician: @transactions.pluck(:activity_clinician).uniq)
                               .index_by(&:activity_clinician)

denialcode_mapping = Denialcodelist.where(denial_code: @transactions.pluck(:denial_code).uniq)
                                   .index_by(&:denial_code)

# Sort transactions by transaction_date in ascending order
sorted_transactions = @transactions.sort_by { |t| t.transaction_date }

# Group transactions by year, month, and day after sorting
grouped_transactions = sorted_transactions.group_by { |t| t.transaction_date.to_date }

# Add worksheet
wb.add_worksheet(name: "Transactions") do |sheet|
  # Add header row with bold style
  sheet.add_row [
    "Sender ID", "Receiver ID", "Receiver", "Claim ID", "Transaction Date",
    "Activity Clinician", "Doctor Name", "Activity ID", "Activity Code",
    "Activity Start Date", "Activity Quantity", "Activity Net",
    "Activity Payment Amount", "Claim Date Settlement",
    "Claim Payment Reference", "Denial Code", "Denial code Description", "RA Comments"
  ], style: header_style

  # Add rows for all transactions without empty lines
  grouped_transactions.each do |_, transactions| # No need to use `date`
    transactions.each do |transaction|
      # Use preloaded doctorlist mapping
      doctor_name = doctorlist_mapping[transaction.activity_clinician]&.doctor_name || ""

      # Lookup denial description from the Denialcodelist mapping
      denial_description = denialcode_mapping[transaction.denial_code]&.description || ""

      # Add transaction row
      sheet.add_row [
        transaction.sender_id, 
        transaction.receiver_id,            
        transaction.provider_id,             
        transaction.claim_id,            
        transaction.transaction_date.strftime('%Y-%m-%d %H:%M:%S'), 
        transaction.activity_clinician,       
        doctor_name,                           
        transaction.activity_id,              
        transaction.activity_code,             
        transaction.activity_start.strftime('%Y-%m-%d %H:%M:%S'),  
        transaction.activity_quantity,        
        transaction.activity_net,             
        transaction.activity_payment_amount,  
        transaction.date_settlement.present? ? transaction.date_settlement.strftime('%Y-%m-%d %H:%M:%S') : nil,
        transaction.payment_reference,
        transaction.denial_code, 
        denial_description,
        transaction.comments    
      ]
    end
  end
end
